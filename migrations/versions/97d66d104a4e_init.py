"""init

Revision ID: 97d66d104a4e
Revises: 
Create Date: 2025-10-20 17:52:17.810337

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision: str = '97d66d104a4e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

EMBED_DIM = 1536

def upgrade() -> None:
    """Upgrade schema."""
    # Enable pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conhecimento',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('context', sa.String(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('embedding', Vector(EMBED_DIM), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conhecimento_context'), 'conhecimento', ['context'], unique=False)
    op.create_index(op.f('ix_conhecimento_id'), 'conhecimento', ['id'], unique=False)
    op.create_index('ix_faq_embedding_ivfflat', 'conhecimento', ['embedding'], unique=False, postgresql_using='ivfflat', postgresql_with={'lists': 100}, postgresql_ops={'embedding': 'vector_l2_ops'})
    op.create_table('usuario',
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('senha', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('flg_ativo', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('flg_excluido', sa.Boolean(), server_default='false', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usuario_email'), 'usuario', ['email'], unique=True)
    op.create_index(op.f('ix_usuario_id'), 'usuario', ['id'], unique=False)
    op.create_table('password_reset_token',
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('flg_ativo', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('flg_excluido', sa.Boolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_password_reset_token_id'), 'password_reset_token', ['id'], unique=False)
    op.create_index(op.f('ix_password_reset_token_token'), 'password_reset_token', ['token'], unique=True)
    op.create_index(op.f('ix_password_reset_token_usuario_id'), 'password_reset_token', ['usuario_id'], unique=False)
    op.create_table('weblink',
    sa.Column('weblink', sa.String(length=255), nullable=True),
    sa.Column('resumo', sa.Text(), nullable=True),
    sa.Column('usuario_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('flg_ativo', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('flg_excluido', sa.Boolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weblink_id'), 'weblink', ['id'], unique=False)
    op.create_index(op.f('ix_weblink_usuario_id'), 'weblink', ['usuario_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weblink_usuario_id'), table_name='weblink')
    op.drop_index(op.f('ix_weblink_id'), table_name='weblink')
    op.drop_table('weblink')
    op.drop_index(op.f('ix_password_reset_token_usuario_id'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_token'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_id'), table_name='password_reset_token')
    op.drop_table('password_reset_token')
    op.drop_index(op.f('ix_usuario_id'), table_name='usuario')
    op.drop_index(op.f('ix_usuario_email'), table_name='usuario')
    op.drop_table('usuario')
    op.drop_index('ix_faq_embedding_ivfflat', table_name='conhecimento', postgresql_using='ivfflat', postgresql_with={'lists': 100}, postgresql_ops={'embedding': 'vector_l2_ops'})
    op.drop_index(op.f('ix_conhecimento_id'), table_name='conhecimento')
    op.drop_index(op.f('ix_conhecimento_context'), table_name='conhecimento')
    op.drop_table('conhecimento')
    # ### end Alembic commands ###
